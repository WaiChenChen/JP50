# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'jp50_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow#繼承用
import random
import copy

class Ui_MainWindow(QMainWindow):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(472, 674)
        MainWindow.setMinimumSize(QtCore.QSize(472, 674))
        MainWindow.setMaximumSize(QtCore.QSize(472, 674))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        MainWindow.setFont(font)
        MainWindow.setMouseTracking(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.button_ans1 = QtWidgets.QPushButton(self.centralwidget)
        self.button_ans1.setGeometry(QtCore.QRect(19, 266, 220, 60))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(24)
        self.button_ans1.setFont(font)
        self.button_ans1.setIconSize(QtCore.QSize(24, 24))
        self.button_ans1.setObjectName("button_ans1")
        self.button_ans2 = QtWidgets.QPushButton(self.centralwidget)
        self.button_ans2.setGeometry(QtCore.QRect(240, 266, 220, 60))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(24)
        self.button_ans2.setFont(font)
        self.button_ans2.setIconSize(QtCore.QSize(24, 16))
        self.button_ans2.setObjectName("button_ans2")
        self.button_ans3 = QtWidgets.QPushButton(self.centralwidget)
        self.button_ans3.setGeometry(QtCore.QRect(19, 330, 220, 60))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(24)
        self.button_ans3.setFont(font)
        self.button_ans3.setIconSize(QtCore.QSize(24, 16))
        self.button_ans3.setObjectName("button_ans3")
        self.button_ans4 = QtWidgets.QPushButton(self.centralwidget)
        self.button_ans4.setGeometry(QtCore.QRect(240, 330, 220, 60))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(24)
        self.button_ans4.setFont(font)
        self.button_ans4.setIconSize(QtCore.QSize(24, 16))
        self.button_ans4.setObjectName("button_ans4")
        self.label_title = QtWidgets.QLabel(self.centralwidget)
        self.label_title.setEnabled(True)
        self.label_title.setGeometry(QtCore.QRect(10, 10, 191, 31))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(24)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.label_question = QtWidgets.QLabel(self.centralwidget)
        self.label_question.setGeometry(QtCore.QRect(20, 70, 441, 151))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(72)
        font.setStrikeOut(False)
        font.setKerning(True)
        self.label_question.setFont(font)
        self.label_question.setMouseTracking(True)
        self.label_question.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_question.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_question.setMidLineWidth(0)
        self.label_question.setAlignment(QtCore.Qt.AlignCenter)
        self.label_question.setObjectName("label_question")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(20, 400, 441, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(20, 430, 441, 71))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(24)
        self.lineEdit.setFont(font)
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 472, 21))
        self.menubar.setObjectName("menubar")
        self.menuguide01 = QtWidgets.QMenu(self.menubar)
        self.menuguide01.setObjectName("menuguide01")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action01 = QtWidgets.QAction(MainWindow)
        self.action01.setObjectName("action01")
        self.action02 = QtWidgets.QAction(MainWindow)
        self.action02.setObjectName("action02")
        self.action03 = QtWidgets.QAction(MainWindow)
        self.action03.setObjectName("action03")
        self.menuguide01.addAction(self.action01)
        self.menuguide01.addAction(self.action02)
        self.menuguide01.addAction(self.action03)
        self.menubar.addAction(self.menuguide01.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        #call initial
        self.initial()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.button_ans1.setText(_translate("MainWindow", "button_ans1"))
        self.button_ans2.setText(_translate("MainWindow", "button_ans2"))
        self.button_ans3.setText(_translate("MainWindow", "button_ans3"))
        self.button_ans4.setText(_translate("MainWindow", "button_ans4"))
        self.label_title.setText(_translate("MainWindow", "日文五十音"))
        self.label_question.setText(_translate("MainWindow", "(word)"))
        self.menuguide01.setTitle(_translate("MainWindow", "guide01"))
        self.action01.setText(_translate("MainWindow", "01"))
        self.action02.setText(_translate("MainWindow", "02"))
        self.action03.setText(_translate("MainWindow", "03"))

    #################################################################
    def __init__(self):
        super().__init__()
        #print("super().__init__()")
        
    def keyPressEvent(self, event):#按下esc離開程式，未成功
        print("esc")
        if event.key() == QtCore.Qt.Key_Escape:
            self.close()

    #以上為QT design匯出程式，日後可能還會變更，所以額外的初始設定分開寫
    def initial(self):
        #連結按鈕功能_button_ans1~4
        self.button_ans1.clicked.connect(self.buttonPressed)
        self.button_ans2.clicked.connect(self.buttonPressed)
        self.button_ans3.clicked.connect(self.buttonPressed)
        self.button_ans4.clicked.connect(self.buttonPressed)
        #lineEdit隨時發生更動時，執行一次檢查
        self.lineEdit.textChanged.connect(self.inputChange)
        self.setQuestionList()
        self.setQuestionUi()
        

    #平假名+片假名
    answerDict={
    "あ": ["a"], "い": ["i"], "う": ["u"], "え": ["e"], "お": ["o"],
    "か": ["ka"], "き": ["ki"], "く": ["ku"], "け": ["ke"], "こ": ["ko"],
    "さ": ["sa"], "し": ["shi"], "す": ["su"], "せ": ["se"], "そ": ["so"],
    "た": ["ta"], "ち": ["chi"], "つ": ["tsu"], "て": ["te"], "と": ["to"],
    "な": ["na"], "に": ["ni"], "ぬ": ["nu"], "ね": ["ne"], "の": ["no"],
    "は": ["ha"], "ひ": ["hi"], "ふ": ["fu"], "へ": ["he"], "ほ": ["ho"],
    "ま": ["ma"], "み": ["mi"], "む": ["mu"], "め": ["me"], "も": ["mo"],
    "や": ["ya"], "ゆ": ["yu"], "よ": ["yo"],
    "ら": ["ra"], "り": ["ri"], "る": ["ru"], "れ": ["re"], "ろ": ["ro"],
    "わ": ["wa"], "を": ["wo"], "ん": ["n"],
    "ア": ["a"], "イ": ["i"], "ウ": ["u"], "エ": ["e"], "オ": ["o"],
    "カ": ["ka"], "キ": ["ki"], "ク": ["ku"], "ケ": ["ke"], "コ": ["ko"],
    "サ": ["sa"], "シ": ["shi"], "ス": ["su"], "セ": ["se"], "ソ": ["so"],
    "タ": ["ta"], "チ": ["chi"], "ツ": ["tsu"], "テ": ["te"], "ト": ["to"],
    "ナ": ["na"], "ニ": ["ni"], "ヌ": ["nu"], "ネ": ["ne"], "ノ": ["no"],
    "ハ": ["ha"], "ヒ": ["hi"], "フ": ["fu"], "ヘ": ["he"], "ホ": ["ho"],
    "マ": ["ma"], "ミ": ["mi"], "ム": ["mu"], "メ": ["me"], "モ": ["mo"],
    "ヤ": ["ya"], "ユ": ["yu"], "ヨ": ["yo"],
    "ラ": ["ra"], "リ": ["ri"], "ル": ["ru"], "レ": ["re"], "ロ": ["ro"],
    "ワ": ["wa"], "ヲ": ["wo"], "ン": ["n"]}

    #[  ["あ",["a","i","u","o"],"unansered/correct/incorrect"],  ~]
    questionList=[]
    progressIndex=0#當前題數
    correctCount=0#答對題數
    errorCount=0#答錯題數
    totalQuestionCount=0


    #將questionList之第二項加入其他作答選項
    def setQuestionList(self):
        print("="*50,"\nsetQuestionList")
        new_questionList=[]
        self.questionList=copy.deepcopy([[key,value,"unansered"] for key,value in self.answerDict.items()])
        for ques,options,ansered in self.questionList:
            while len(options)<4:
                options.append("wrong")#新增三個錯誤選項
            random.shuffle(options)#打散
            new_questionList.append([ques,options,ansered])
        random.shuffle(new_questionList)
        self.questionList=new_questionList#儲存新的題目列
        self.totalQuestionCount=len(self.questionList)

        print("questionList內容簡覽")
        for i,j,k in self.questionList[0:5]:
            print(i,j,k)

    #input每次有變動就執行一次
    def inputChange(self):
        #當輸入文字與答案一樣長時才檢查
        print("="*50,"\ninputChange()")
        print(self.lineEdit.text())
        print(self.answerDict[self.label_question.text()][0])
        if len(self.lineEdit.text()) == len(self.answerDict[self.label_question.text()][0]):
            #上傳答案進行檢查步驟
            self.answerCheck(self.lineEdit.text())
    
    #按下四個按鈕其中之一時
    def buttonPressed(self):
        button = self.sender()
        #self.lineEdit.setText(button.text())
        self.answerCheck(button.text())

    #檢查答案，以及答對與答錯部分
    def answerCheck(self,inputAns:str):
        print("="*50,f"\n{self.answerDict[self.label_question.text()]}")
        if inputAns in self.answerDict[self.label_question.text()]:
            self.answerCorrect()
        else:
            self.answerIncorrect()
    def answerCorrect(self):
        print("="*50,"\ncorrect")
        self.correctCount+=1
        self.questionList[self.progressIndex][2]="correct"
        self.finishAnswerStep()
        
    def answerIncorrect(self):
        print("="*50,"\nincorrect")
        self.errorCount+=1
        self.questionList[self.progressIndex][2]="incorrect"
        self.finishAnswerStep()
        
    def finishAnswerStep(self):
        print("="*50,"\nfinishAnswerStep")
        if self.progressIndex<self.totalQuestionCount-1:
            self.progressIndex+=1
            self.setQuestionUi()
        else:
            pass
        
    
    #畫面更新內容
    def setQuestionUi(self):
        print("="*50,"\nsetQuestionUi")
        print(self.questionList[self.progressIndex])
        print("label:",self.questionList[self.progressIndex][0])
        self.label_question.setText(self.questionList[self.progressIndex][0])
        self.button_ans1.setText(self.questionList[self.progressIndex][1][0])
        self.button_ans2.setText(self.questionList[self.progressIndex][1][1])
        self.button_ans3.setText(self.questionList[self.progressIndex][1][2])
        self.button_ans4.setText(self.questionList[self.progressIndex][1][3])
        self.lineEdit.setText("")
        print("setQuestionUi finish")



import sys
app = QtWidgets.QApplication(sys.argv)
MainWindow = QtWidgets.QMainWindow()
ui = Ui_MainWindow()
ui.setupUi(MainWindow)
MainWindow.show()
sys.exit(app.exec_())



